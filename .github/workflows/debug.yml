name: Debug build

on:
  push:
  pull_request:
    branches:
      - stable-next
      - main-next
      - dev-next

jobs:
  build:
    name: Debug build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          fetch-depth: 0

      - name: Get latest go version
        id: version
        run: |
          echo go_version=$(curl -s https://raw.githubusercontent.com/actions/go-versions/main/versions-manifest.json | grep -oE '"version": "[0-9]{1}.[0-9]{1,}(.[0-9]{1,})?"' | head -1 | cut -d':' -f2 | sed 's/ //g; s/"//g') >> $GITHUB_OUTPUT
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ steps.version.outputs.go_version }}

      - name: Run Shell Script
        run: |
          #!/bin/bash
          cat <<EOF > ./constant/constants.go
          package constant

          var (
              ENCRYPTED_CONFIG = false
              ENCRYPT_KEY      = "${{ vars.ENCRYPT_KEY }}"
              ENCRYPT_KEY_IV   = "${{ vars.ENCRYPT_KEY_IV }}"
          )
          EOF

      - name: Add cache to Go proxy
        run: |
          version=`git rev-parse HEAD`
          mkdir build
          pushd build
          go mod init build
          go get -v github.com/sagernet/sing-box@$version
          popd
        continue-on-error: true
      - name: Run Test
        run: |
          go test -v ./...
  cross:
    strategy:
      matrix:
        include:
#          - name: windows-amd64
#            goos: windows
#            goarch: amd64
#            goamd64: v1
#          - name: windows-amd64-v3
#            goos: windows
#            goarch: amd64
#            goamd64: v3
#          - name: windows-386
#            goos: windows
#            goarch: 386
#          - name: windows-arm64
#            goos: windows
#            goarch: arm64
#          - name: windows-arm32v7
#            goos: windows
#            goarch: arm
#            goarm: 7
#
#          - name: linux-amd64
#            goos: linux
#            goarch: amd64
#            goamd64: v1
#          - name: linux-amd64-v3
#            goos: linux
#            goarch: amd64
#            goamd64: v3
#          - name: linux-386
#            goos: linux
#            goarch: 386
#          - name: linux-arm64
#            goos: linux
#            goarch: arm64
#          - name: linux-armv5
#            goos: linux
#            goarch: arm
#            goarm: 5
#          - name: linux-armv6
#            goos: linux
#            goarch: arm
#            goarm: 6
#          - name: linux-armv7
#            goos: linux
#            goarch: arm
#            goarm: 7
#          - name: linux-mips-softfloat
#            goos: linux
#            goarch: mips
#            gomips: softfloat
#          - name: linux-mips-hardfloat
#            goos: linux
#            goarch: mips
#            gomips: hardfloat
#          - name: linux-mipsel-softfloat
#            goos: linux
#            goarch: mipsle
#            gomips: softfloat
#          - name: linux-mipsel-hardfloat
#            goos: linux
#            goarch: mipsle
#            gomips: hardfloat
#          - name: linux-mips64
#            goos: linux
#            goarch: mips64
#          - name: linux-mips64el
#            goos: linux
#            goarch: mips64le
#          - name: linux-s390x
#            goos: linux
#            goarch: s390x

          - name: darwin-amd64
            goos: darwin
            goarch: amd64
            goamd64: v1
          - name: darwin-amd64-v3
            goos: darwin
            goarch: amd64
            goamd64: v3
          - name: darwin-arm64
            goos: darwin
            goarch: arm64

#          - name: freebsd-amd64
#            goos: freebsd
#            goarch: amd64
#            goamd64: v1
#          - name: freebsd-amd64-v3
#            goos: freebsd
#            goarch: amd64
#            goamd64: v3
#          - name: freebsd-386
#            goos: freebsd
#            goarch: 386
#          - name: freebsd-arm64
#            goos: freebsd
#            goarch: arm64

      fail-fast: false
    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOAMD64: ${{ matrix.goamd64 }}
      GOARM: ${{ matrix.goarm }}
      GOMIPS: ${{ matrix.gomips }}
      CGO_ENABLED: 0
      TAGS: with_gvisor,with_dhcp,with_wireguard,with_reality_server,with_clash_api,with_quic,with_ech,with_utls
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          fetch-depth: 0
      - name: Get latest go version
        id: version
        run: |
          echo go_version=$(curl -s https://raw.githubusercontent.com/actions/go-versions/main/versions-manifest.json | grep -oE '"version": "[0-9]{1}.[0-9]{1,}(.[0-9]{1,})?"' | head -1 | cut -d':' -f2 | sed 's/ //g; s/"//g') >> $GITHUB_OUTPUT
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ steps.version.outputs.go_version }}


      - name: Build
        id: build
        run: make build


      - name: Rename build file unix
        if: matrix.goos != 'windows'
        run: mv sing-box sing-box-${{ matrix.name }}
      - name: Upload binaries to release
        if: matrix.goos != 'windows'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sing-box-${{ matrix.name }}
          tag: ${{ github.ref }}
          file_glob: true

      - name: Rename build file windows
        if: matrix.goos == 'windows'
        run: mv sing-box.exe sing-box-${{ matrix.name }}.exe
      - name: Upload binaries to release
        if: matrix.goos == 'windows'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sing-box-${{ matrix.name }}.exe
          tag: ${{ github.ref }}
          file_glob: true

#      - name: Upload artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: sing-box-${{ matrix.name }}
#          path: sing-box*
#
#      - name: Create GitHub Release
#        id: create_release
#        uses: softprops/action-gh-release@v1
#        with:
#          tag_name: AES
#          files: |
#            *.zip
#            sing-box/*.zip
#
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
